GC

指令
-XX:+PrintGCDetails 打印GC详细日志
-XX:+PrintGC        打印GC基本日志
-Xloggc:<filename>  输入日志到filename
-XX:+PrintGCDateStamps 打印时间戳
-Xmx1g -Xms1g		分配堆内存
-XX:+UseSerialGC	指定串行GC
-XX:+UseParallelGC  指定并行GC(1.8默认)
-XX:+UseConcMarkSweepGC CMS
-XX:+UseG1GC		G1

1.
并行GC。1.8默认执行
2.
串行GC。
3.
CMS
YoungGC类似。
FullGC，进入标记流程。（初始标记，并发标记，并发预清理，最终标记，并发清除，并发重置）
4.
G1
与CMS类似。
退化后执行串行GC。

分配堆内存增大时，GC执行间隔加长，单次执行时间长
分配堆内存减小时，GC执行间隔频繁，单次执行时间短
内存非常小时，会很快进入FullGC，最终导致OOM



内存
jps -l
jstack -l 97552
jmap -histo 97552

JVM内部线程：VM线程、定时任务线程、GC线程、编译器线程、信号分发线程
GC暂定时，改写安全点状态，暂定所有线程；恢复安全点状态后，线程恢复。

Java对象：对象头+对象体（数据对齐）
64位JVM对象头占据12byte（按8字节对齐）实际占用16字节
32位JVM对象头占据8byte（按4字节对齐）实际占用8字节
32位JVM引用占得内存默认4字节
包装类型 Integer 16字节，Long 24字节，远高于原生类型
多维数组，每个嵌套数组都是单独Object，额外占用16字节。
String额外开销，随字符串增长而增加。

内存泄漏








